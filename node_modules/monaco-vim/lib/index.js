'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StatusBar = exports.VimMode = undefined;
exports.initVimMode = initVimMode;

var _keymap_vim = require('./cm/keymap_vim');

var _keymap_vim2 = _interopRequireDefault(_keymap_vim);

var _statusbar = require('./statusbar');

var _statusbar2 = _interopRequireDefault(_statusbar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function initVimMode(editor) {
  var statusbarNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
  var StatusBarClass = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _statusbar2.default;

  var vimAdapter = new _keymap_vim2.default(editor);

  if (!statusbarNode) {
    vimAdapter.attach();
    return vimAdapter;
  }

  var statusbar = new StatusBarClass(statusbarNode, editor);
  var keyBuffer = '';

  vimAdapter.on('vim-mode-change', function (mode) {
    statusbar.setMode(mode);
  });

  vimAdapter.on('vim-keypress', function (key) {
    if (key === ':') {
      keyBuffer = '';
    } else {
      keyBuffer += key;
    }
    statusbar.setKeyBuffer(keyBuffer);
  });

  vimAdapter.on('vim-command-done', function () {
    keyBuffer = '';
    statusbar.setKeyBuffer(keyBuffer);
  });

  vimAdapter.on('dispose', function () {
    statusbar.toggleVisibility(false);
    statusbar.closeInput();
    statusbar.innerHTML = '';
  });

  _keymap_vim2.default.defineExtension('openDialog', function (html, callback, options) {
    statusbar.setSec(html, callback, options);
  });

  _keymap_vim2.default.defineExtension('openNotification', function (html) {
    statusbar.showNotification(html);
  });

  vimAdapter.attach();
  statusbar.toggleVisibility(true);

  return vimAdapter;
}

exports.VimMode = _keymap_vim2.default;
exports.StatusBar = _statusbar2.default;